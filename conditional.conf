input {
    http {
    }
}

filter {
    if [headers][request_uri] == "error" or [path] == "errors" {
        mutate {
            replace => { "type" => "error" }
        }
    } else {
        mutate {
            replace => { "type" => "access" }
        }
        grok {
        match => { "message" => '%{HTTPD_COMBINEDLOG}' }
        }
        mutate {
            gsub => [
                "agent",'"',"",
                "referrer",'"',""
            ]
            convert => {
                "response"=>"integer"
            }
        }
        date{
            match => ["timestamp","dd/MMM/yyyy:HH:mm:ss Z"]
        }
    }
    if "_grokparsefailure" in [tags] {
        drop {}
    }
}

output { 
    stdout{
        codec=>rubydebug
    }
    file {
        path=>"/Users/barsnir/Downloads/ElasticsearchCourse/Logstash/%{+YYYYMMDD}%{type}.log"
    }
}